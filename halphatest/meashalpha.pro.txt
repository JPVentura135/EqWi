;sjs 29 Apr 2014

;mesure the Halpha and all related parameters on the sample of
;spectra, radial velocity shifted.

pro meashalpha

  bdir = '../BOSS/'
  ldir = '../DR7L/'
  mdir = '../DR7M/'

  dat = mrdfits('../radv/BUD_ML_radv.fits',1)
  n = n_elements(dat)

  a = 1.09
  b = 0.584
  c = -1.74e-7
  d = 3.88e-6
  sig_chi = 1.43e-6

  chi_st = a*exp(-1.0*dat.st/b) + c*dat.st + d
  chi_st_err = sqrt(sig_chi^2. + ((a/b)*exp(-1.0*dat.st/b) + c)^2.)

  a = 3.5e-4
  b = 0.344
  d = 0.448e-6
  sig_chi = 0.642e-6

  chi_iz = a*exp(-1.0*(dat.psfmag[3]-dat.psfmag[4])/b) + d
  chi_iz_err = $
     sqrt(sig_chi^2. + $
          ((a/b)*exp(-1.0*(dat.psfmag[3] - dat.psfmag[4])/b)*$
           sqrt(dat.psfmagerr[3]^2. + dat.psfmagerr[4]^2.))^2.)

  a = 1.39e-3
  b = 0.602
  d = 0.939e-6

  chi_ij = a*exp(-1.0*(dat.psfmag[3]-dat.mag_2mass[0])/b) + d
  chi_ij_err = $
     sqrt(sig_chi^2. + $
          ((a/b)*exp(-1.0*(dat.psfmag[3] - dat.mag_2mass[0])/b)*$
           sqrt(dat.psfmagerr[3]^2. + dat.magerr_2mass[0]^2.))^2.)

  harr = replicate({ewha:0.0,ewha_err:0.0,snha:0.0,hgtha:0.0,consig:0.0,actha:'x',chi_st:-999.0,chi_st_err:-999.0,chi_iz:-999.0,chi_iz_err:-999.0,chi_ij:-999.0,chi_ij_err:-999.0},n)
  
  okchist = where(dat.st lt 18)
  harr[okchist].chi_st = chi_st[okchist]
  harr[okchist].chi_st_err = chi_st_err[okchist]

  okchiiz = where(dat.goodphot_sdss[3] + dat.goodphot_sdss[4] + dat.errcut_sdss[3] + dat.errcut_sdss[4] eq 4 and dat.psfmag[3] - dat.psfmag[4] ge 1 and dat.psfmag[3] - dat.psfmag[4] le 2.5)
  harr[okchiiz].chi_iz = chi_iz[okchiiz]
  harr[okchiiz].chi_iz_err = chi_iz_err[okchiiz]

  okchiij = where(dat.goodphot_sdss[3] + dat.goodphot_2mass[0] + dat.errcut_sdss[3] + dat.errcut_2mass[0] eq 4 and dat.psfmag[3] - dat.mag_2mass[0] ge 2.6 and dat.psfmag[3] - dat.mag_2mass[0] le 5.5)
  harr[okchiij].chi_ij = chi_ij[okchiij]
  harr[okchiij].chi_ij_err = chi_ij_err[okchiij]
  
  c = 299792.458D

  for i =0,n-1 do begin
     
     if dat[i].sample eq 'DR7L' then spec = $
        readsloanspec(ldir + 'spSpec-' + $
                      strtrim(dat[i].mjd,2) + '-' + $
                      strtrim(dat[i].plate,2) + '-' + $
                      strtrim(dat[i].fiber,2) + '.fit') 
    
     if dat[i].sample eq 'DR7M' then spec = $
        readbossfits(mdir + 'spec-' + $
                     strtrim(dat[i].plate,2) + '-' + $
                     strtrim(dat[i].mjd,2) + '-0' + $
                     strtrim(dat[i].fiber,2) + '.fits') 
     
     if dat[i].sample eq 'DR10' or $
        dat[i].sample eq 'DR12' then  spec = $
        readbossfits(bdir + 'spec-' + $
                     strtrim(dat[i].plate,2) + '-' + $
                     strtrim(dat[i].mjd,2) + '-' + $
                     strtrim(dat[i].fiber,2) + '.fits')
     
     if dat[i].goodrv eq 0 then wave = spec[0,*] else $
        wave = spec[0,*]*(1-dat[i].rv/c)
     airtovac,wave ;this routine is based on W11, wavelengths in vac there
     flux = spec[1,*] ;but converted to air in the read in programs
     err = spec[2,*]

     p = 0
     contf = flux[where((wave gt 6530 and wave lt 6555) or $
                        (wave gt 6575 and wave lt 6600))]
     
     conte = err[where((wave gt 6530 and wave lt 6555) or $
                       (wave gt 6575 and wave lt 6600))]
     
     harr[i].snha = mean(contf)/stddev(contf)
     harr[i].consig = stddev(contf)

;     linef = flux[where(wave gt 6560.61 and wave lt 6568.6)]
;     linee = err[where(wave gt 6560.61 and wave lt 6568.6)]
;     linew = wave[where(wave gt 6560.61 and wave lt 6568.6)]

     linef = flux[where(wave gt 6557.61 and wave lt 6571.6)]
     linee = err[where(wave gt 6557.61 and wave lt 6571.6)]
     linew = wave[where(wave gt 6557.61 and wave lt 6571.6)]

     harr[i].hgtha = max(linef) - min(linef)

     harr[i].ewha = -1.0*tsum(linew,1-linef/mean(contf))

     n = n_elements(linef)
     toterr = 0

     for j = 0,n-2 do $
        toterr = sqrt(toterr^2. + $
                      ((((linee[j]^2 + linee[j+1]^2.)/4)*(linew[j+1] - linew[j])^2.)^0.5)^2.)

     ewerr = sqrt((toterr/mean(contf))^2. + ((harr[i].ewha*mean(contf))^2.)*((mean(conte)/mean(contf))^4.)) 
     harr[i].ewha_err = ewerr

     if dat[i].st eq 20 and harr[i].snha gt 3 and harr[i].hgtha gt 2*harr[i].consig and harr[i].hgtha le 3*harr[i].consig then begin
        plot,wave,flux,xrange=[6520,6620]
        oplot,[6563,6563],[0,10],linestyle=2,color=230,thick=1
        oplot,[6557.61,6557.61],[0,10],linestyle=1,color=230,thick=1
        oplot,[6568.6,6568.6],[0,10],linestyle=1,color=230,thick=1

        print,harr[i].snha
        print,harr[i].ewha,harr[i].ewha_err
        print,harr[i].hgtha,3*harr[i].consig
        oplot,[0,8000],[1,1]*mean(contf),color=100,linestyle=2

    
        stop
     endif


  endfor
;conditions for active M
  harr[where(dat.st lt 10 and harr.ewha ge 0.75 and harr.ewha gt harr.ewha_err and harr.snha gt 3 and harr.hgtha gt 3*harr.consig,nam)].actha = 'y'
;conditions for weak M
  harr[where(dat.st lt 10 and harr.ewha gt 0 and harr.ewha lt 0.75 and harr.ewha gt harr.ewha_err and harr.snha gt 3 and harr.hgtha gt 3*harr.consig,nwm)].actha = 'w'
;conditions for maybe M
  harr[where(dat.st lt 10 and harr.ewha gt 0.75 and harr.ewha gt harr.ewha_err and harr.snha gt 3 and harr.hgtha gt 2*harr.consig and harr.hgtha le 3*harr.consig,nmm)].actha = 'm'
;confitions for inactive M
  harr[where(dat.st lt 10 and harr.actha eq 'x' and harr.snha gt 3,nnm)].actha = 'n'

;conditions for active L
  harr[where(dat.st ge 10 and harr.ewha ge 0.75 and harr.ewha gt harr.ewha_err and harr.snha gt 4 and harr.hgtha gt 3*harr.consig,nal)].actha = 'y'
;conditions for weak L
  harr[where(dat.st ge 10 and harr.ewha gt 0 and harr.ewha lt 0.75 and harr.ewha gt harr.ewha_err and harr.snha gt 4 and harr.hgtha gt 3*harr.consig,nwl)].actha = 'w'
;conditions for maybe L
  harr[where(dat.st ge 10 and harr.ewha gt 0.75 and harr.ewha gt harr.ewha_err and harr.snha gt 4 and harr.hgtha gt 2*harr.consig and harr.hgtha le 3*harr.consig,nml)].actha = 'm'
;confitions for inactive L
  harr[where(dat.st ge 10 and harr.actha eq 'x' and harr.snha gt 4,nnl)].actha = 'n'


  print,nam+nal,nwm+nwl,nmm+nml,nnm+nnl
  print,nal,nwl,nml,nnl
  print,nam,nwm,nmm,nnm

  combine_structs,dat,harr,outh
  mwrfits,outh,'BUD_ML_Halpha.fits',/create

stop


end
